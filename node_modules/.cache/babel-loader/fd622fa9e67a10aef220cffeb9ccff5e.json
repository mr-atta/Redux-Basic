{"ast":null,"code":"let initialState = [{\n  name: \"Tareq\",\n  votes: 0\n}, {\n  name: \"Suhaib\",\n  votes: 0\n}, {\n  name: \"Ibrahim\",\n  votes: 0\n}];\nexport default ((state = initialState, action) => {\n  let {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"INCREMENT\":\n      return state.map(candidate => {\n        if (candidate.name === payload.name) {\n          return {\n            name: candidate.name,\n            votes: candidate.votes + 1\n          };\n        }\n\n        return candidate;\n      });\n\n    case \"DISABLE\":\n      return state.map(candidate => candidate.name === payload.name ? { ...candidate,\n        disabled: true\n      } : candidate);\n\n    case \"RESET\":\n      return initialState;\n\n    default:\n      return state;\n  }\n}); // we will add the action here, but idealy we need to separate them into their own files\n\nexport const increment = name => {\n  return {\n    type: \"INCREMENT\",\n    payload: name\n  };\n};\nexport const disable = name => {\n  return {\n    type: \"DISABLE\",\n    payload: name\n  };\n};\nexport const reset = () => {\n  return {\n    type: \"RESET\"\n  };\n};","map":{"version":3,"sources":["/home/matta/401/part2/Redux-Basic/src/store/candidates.js"],"names":["initialState","name","votes","state","action","type","payload","map","candidate","disabled","increment","disable","reset"],"mappings":"AAAA,IAAIA,YAAY,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CADiB,EAEjB;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFiB,EAGjB;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHiB,CAAnB;AAMA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAAxB;;AACA,UAAQC,IAAR;AACE,SAAK,WAAL;AACE,aAAOF,KAAK,CAACI,GAAN,CAAWC,SAAD,IAAe;AAC9B,YAAIA,SAAS,CAACP,IAAV,KAAmBK,OAAO,CAACL,IAA/B,EAAqC;AACnC,iBAAO;AAAEA,YAAAA,IAAI,EAAEO,SAAS,CAACP,IAAlB;AAAwBC,YAAAA,KAAK,EAAEM,SAAS,CAACN,KAAV,GAAkB;AAAjD,WAAP;AACD;;AACD,eAAOM,SAAP;AACD,OALM,CAAP;;AAMF,SAAK,SAAL;AACE,aAAOL,KAAK,CAACI,GAAN,CAAWC,SAAD,IACfA,SAAS,CAACP,IAAV,KAAmBK,OAAO,CAACL,IAA3B,GACI,EAAE,GAAGO,SAAL;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OADJ,GAEID,SAHC,CAAP;;AAKF,SAAK,OAAL;AACE,aAAOR,YAAP;;AACF;AACE,aAAOG,KAAP;AAjBJ;AAmBD,CArBD,E,CAuBA;;AACA,OAAO,MAAMO,SAAS,GAAIT,IAAD,IAAU;AACjC,SAAO;AACLI,IAAAA,IAAI,EAAE,WADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMU,OAAO,GAAIV,IAAD,IAAU;AAC/B,SAAO;AACLI,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMW,KAAK,GAAG,MAAM;AACzB,SAAO;AACLP,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM","sourcesContent":["let initialState = [\n  { name: \"Tareq\", votes: 0 },\n  { name: \"Suhaib\", votes: 0 },\n  { name: \"Ibrahim\", votes: 0 },\n];\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case \"INCREMENT\":\n      return state.map((candidate) => {\n        if (candidate.name === payload.name) {\n          return { name: candidate.name, votes: candidate.votes + 1 };\n        }\n        return candidate;\n      });\n    case \"DISABLE\":\n      return state.map((candidate) =>\n        candidate.name === payload.name\n          ? { ...candidate, disabled: true }\n          : candidate\n      );\n    case \"RESET\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// we will add the action here, but idealy we need to separate them into their own files\nexport const increment = (name) => {\n  return {\n    type: \"INCREMENT\",\n    payload: name,\n  };\n};\n\nexport const disable = (name) => {\n  return {\n    type: \"DISABLE\",\n    payload: name,\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: \"RESET\",\n  };\n};\n"]},"metadata":{},"sourceType":"module"}